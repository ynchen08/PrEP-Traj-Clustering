for (k in 2:6){
## Single random initialization run
# n_param=(3*k)+(k-1)
# Bvec=rnorm(n_param,0,1)
# mod[[k]]=lcmm(fixed=Protect~1+Week+I(Week^2),random=~-1, mixture=~1+Week+I(Week^2),subject='ID',ng=k,data=SP_long, link="thresholds",nwg=FALSE, B=Bvec)
## Random grid search initialization
mod[[k]]=gridsearch(rep = 20, maxiter = 15, minit = mod[[1]],lcmm(fixed=Protect~1+Week+I(Week^2),random=~-1, mixture=~1+Week+I(Week^2),subject='ID',ng=k,data=SP_long, link="thresholds",nwg=FALSE,),cl=5)
}
#Restore relevant packages
renv::restore()
#install.packages("lcmm")
library(lcmm)
library(tidyr)
library(renv)
library(dplyr)
# install.packages("rlang")
library(rlang)
# install.packages("devtools")
# renv::install("hlennon/LCTMtools")
library(LCTMtools)
#Import input data
setwd("C:/Users/yche465/Desktop/AIM 1/Codes/PrEP-Traj-Clustering/Export")
SeroProtect=read.delim("SeroProtect.txt",sep=",",header=FALSE)
colnames(SeroProtect)=c("ID",sapply(1:103, function(i){
paste0("Protect",i)
}))
#Convert wide to long format
SP_long=SeroProtect%>%gather(., Week, Protect,Protect1:Protect103, factor_key=TRUE)
SP_long$Week=gsub("Protect","",SP_long$Week)%>%as.numeric()
SP_long=SP_long%>%arrange(ID,Week)
##scale down the time variable to facilitate model convergence
SP_long$Week=SP_long$Week/10
#Run 1-group latent class trajectory model
mod=list()
mod[[1]]=lcmm(Protect~1+Week+I(Week^2), subject='ID',ng=1,data=SP_long, link="thresholds", maxiter=200)
for (k in 2:6){
## Single random initialization run
# n_param=(3*k)+(k-1)
# Bvec=rnorm(n_param,0,1)
# mod[[k]]=lcmm(fixed=Protect~1+Week+I(Week^2),random=~-1, mixture=~1+Week+I(Week^2),subject='ID',ng=k,data=SP_long, link="thresholds",nwg=FALSE, B=Bvec)
## Random grid search initialization
mod[[k]]=gridsearch(rep = 20, maxiter = 15, minit = mod[[1]],lcmm(fixed=Protect~1+Week+I(Week^2),random=~-1, mixture=~1+Week+I(Week^2),subject='ID',ng=k,data=SP_long, link="thresholds",nwg=FALSE,),cl=5)
}
k=2
k
gridsearch(rep = 20, maxiter = 15, minit = mod[[1]],lcmm(fixed=Protect~1+Week+I(Week^2),random=~-1, mixture=~1+Week+I(Week^2),subject='ID',ng=k,data=SP_long, link="thresholds",nwg=FALSE,),cl=5)
for (k in 2:6){
## Single random initialization run
# n_param=(3*k)+(k-1)
# Bvec=rnorm(n_param,0,1)
# mod[[k]]=lcmm(fixed=Protect~1+Week+I(Week^2),random=~-1, mixture=~1+Week+I(Week^2),subject='ID',ng=k,data=SP_long, link="thresholds",nwg=FALSE, B=Bvec)
## Random grid search initialization
mod[[k]]=gridsearch(rep = 20, maxiter = 15, minit = mod[[1]],lcmm(fixed=Protect~1+Week+I(Week^2),random=~-1, mixture=~1+Week+I(Week^2),subject='ID',ng=k,data=SP_long, link="thresholds",nwg=FALSE),cl=5)
}
