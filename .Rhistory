ncol=2,nrow=3)
ggarrange(plotlist=Obs_sp_proptraj_plot,ncol=2)
ggarrange(plotlist=Obs_sp_proptraj_plot)
ggarrange(plotlist=Obs_sp_proptraj_plot,ncol=2,nrow=ceiling(len(Obs_sp_proptraj_plot)/2))
ggarrange(plotlist=Obs_sp_proptraj_plot,ncol=2,nrow=ceiling(length(Obs_sp_proptraj_plot)/2))
annotate_figure(obs_plot, top = text_grob("Observed proportion of optimal PrEP sero-protection by identified group membership", color = "black", face = "bold", size = 14))
obs_plot=ggarrange(plotlist=Obs_sp_proptraj_plot,ncol=2,nrow=ceiling(length(Obs_sp_proptraj_plot)/2))
annotate_figure(obs_plot, top = text_grob("Observed proportion of optimal PrEP sero-protection by identified group membership", color = "black", face = "bold", size = 14))
obs_plot
annotate_figure(obs_plot, top = text_grob("Observed proportion of optimal PrEP sero-protection by identified group membership", color = "black", face = "bold", size = 14))
?annotate_figure
annotate_figure(obs_plot, top = text_grob("Observed proportion of optimal PrEP sero-protection by identified group membership", color = "black", face = "bold", size = 16))
ggsave(here("Figure","Obs_prop_traj_k.png"))
?ggsave
ggsave(here("Figure","Obs_prop_traj_k.jpeg"))
ggsave(here("Figures","Obs_prop_traj_k.png"))
ggsave(here("Figures","Obs_prop_traj_k.png"),width=20, height=25)
obs_plot=ggarrange(plotlist=Obs_sp_proptraj_plot,ncol=2,nrow=ceiling(length(Obs_sp_proptraj_plot)/2))
annotate_figure(obs_plot, top = text_grob("Observed proportion of optimal PrEP sero-protection by identified group membership", color = "black", face = "bold", size = 16))
ggsave(here("Figures","Obs_prop_traj_k.png"),width=20, height=15)
obs_plot
annotate_figure(obs_plot, top = text_grob("Observed proportion of optimal PrEP sero-protection by identified group membership", color = "black", face = "bold", size = 16))
ggsave(here("Figures","Obs_prop_traj_k.png"),width=20, height=15)
obs_plot=ggarrange(plotlist=Obs_sp_proptraj_plot,ncol=2,nrow=ceiling(length(Obs_sp_proptraj_plot)/2))
annotate_figure(obs_plot, top = text_grob("Observed proportion of optimal PrEP sero-protection by identified group membership", color = "black", face = "bold", size = 16))
ggsave(obs_plot,here("Figures","Obs_prop_traj_k.png"),width=20, height=15)
obs_plot=ggarrange(plotlist=Obs_sp_proptraj_plot,ncol=2,nrow=ceiling(length(Obs_sp_proptraj_plot)/2))
annotate_figure(obs_plot, top = text_grob("Observed proportion of optimal PrEP sero-protection by identified group membership", color = "black", face = "bold", size = 16))
ggsave(filename=here("Figures","Obs_prop_traj_k.png"),plot=obs_plot,width=20, height=15)
ggexport(obs_plot, filename = here("Figures","Obs_prop_traj_k.png"))
obs_plot=ggarrange(plotlist=Obs_sp_proptraj_plot,ncol=2,nrow=ceiling(length(Obs_sp_proptraj_plot)/2))
obs_plot=annotate_figure(obs_plot, top = text_grob("Observed proportion of optimal PrEP sero-protection by identified group membership", color = "black", face = "bold", size = 16))
ggexport(obs_plot, filename = here("Figures","Obs_prop_traj_k.png"))
ggsave(filename=here("Figures","Obs_prop_traj_k.png"),plot=obs_plot,width=20, height=15)
ggexport(obs_plot, filename = here("Figures","Obs_prop_traj_k.png"),width=20, height=15)
?ggexport
ggexport(obs_plot, filename = here("Figures","Obs_prop_traj_k.png"),width=700, height=600)
ggexport(obs_plot, filename = here("Figures","Obs_prop_traj_k.png"),width=1200, height=1000)
saveRDS(Obs_sp_proptraj_k, here("Export","Obs_sp_proptraj_k"))
saveRDS(pred_traj_k,here("Export","Pred_sp_probtraj_k"))
plotGBTM=function(mod){
datnew=data.frame(Week = seq(1, 103)/10)
par(mfrow=c(3,2),oma=c(1,1,1.5,1)+0.1,mar=c(4,4,3,1)+0.1)
pred_traj_k=list()
for (k in 1:length(mod)){
#create legend
Legend=c(sapply(1:k, function(i){
paste0("Group ",i)
}))
#create model prediction for group trajectory and save as object
plotpred=predictY(mod[[k]],datnew,var.time="Week", draws=2000)
pred_traj_k[[k]]=plotpred
#plot the predicted trajectory
plot(plotpred,lty=1, xlab="Week", ylab="Probability", shades=TRUE, xaxt="n", yaxt="n",legend=NULL,main=paste0("K=",k))
legend("topright",Legend,cex=0.5,lty=1, col=1:k,bty = "n")
axis(1, at =seq(0, 103, by=10)/10,label=seq(0, 103, by=10))
axis(2,at=seq(0,1,by=0.1), label=seq(0,1,by=0.1),las=1)
}
#add title to the plot
mtext("Predicted trajectories of PrEP sero-protection (Rand.Init=20, Maxiter=10)", side=3,line = 0,outer = TRUE)
#export the predicted trajectories as R object
saveRDS(pred_traj_k,here("Export","Pred_sp_probtraj_k"))
}
plotGBTM(mod)
rm(list=ls())
#install packages if needed -----------------------------------------------------
#install.packages("lcmm")
#install.packages('tidyr')
#install.packages('dplyr')
#install.packages("rlang")
#install.packages("devtools")
#renv::install("hlennon/LCTMtools")
#install.packages('here')
#install.packages('ellipsis')
#Restore relevant packages-------------------------------------------------------
# renv::dependencies()
# renv::snapshot()
renv::restore()
#load libraries -----------------------------------------------------------------
library(lcmm)
library(tidyr)
library(renv)
library(dplyr)
library(rlang)
library(LCTMtools)
library(here)
library(ellipsis)
#Import input data --------------------------------------------------------------
SeroProtect=read.delim(here("./Data/SeroProtect_4k.txt"),sep=",",header=FALSE)
colnames(SeroProtect)=c("ID",sapply(1:103, function(i){
paste0("Protect",i)
}))
orig_ID=SeroProtect$ID #create original ID
SeroProtect['ID']=1:nrow(SeroProtect)  #create new analysis specific ID
new_ID=SeroProtect$ID
## Index object for linking original and analysis ID
sampled_ID_index=data.frame(ID_orig=orig_ID,
ID_new=new_ID)
write.csv(sampled_ID_index, here("Export","Sampled_ID_index.csv"), row.names=FALSE)
#Convert wide to long format (with analysis ID) --------------------------------------------
SP_long=SeroProtect%>%tidyr::gather(., Week, Protect,Protect1:Protect103, factor_key=TRUE)
SP_long$Week=gsub("Protect","",SP_long$Week)%>%as.numeric()
SP_long=SP_long%>%arrange(ID,Week)
##scale down the time variable to facilitate model convergence
SP_long$Week=SP_long$Week/10
saveRDS(SP_long,here("./Data/SP_long_4k"))
#Run 1-group latent class trajectory model ---------------------------------------------------
mod=list()
mod[[1]]=lcmm(Protect~1+Week+I(Week^2), subject='ID',ng=1,data=SP_long, link="thresholds", maxiter=200)
# Implement K=2~6 GBTM--------------------------------------------------------------------------
source(here("Programs","Helper_Functions_GBTM.R"))
num_rep=20
num_maxit=10
Ncore=detectCores()-1
Time_rep20maxit10=rep(NA,6)
mod[[2]]=mod[[3]]=mod[[4]]=mod[[5]]=mod[[6]]=NULL
for (k in 2:6){
cat("K=",k)
t1=Sys.time()
cl=makeCluster(Ncore-1)
clusterExport(cl,list("k",'lcmm'),environment())
mod[[k]]=gridsearch(rep = num_rep, maxiter = num_maxit, minit = mod[[1]],
lcmm(fixed=Protect~1+Week+I(Week^2),random=~-1, mixture=~1+Week+I(Week^2),
subject='ID',ng=k,data=SP_long, link="thresholds",nwg=FALSE),cl=cl)
stopCluster(cl)
t2=Sys.time()
Time_rep20maxit10[k]=difftime(t2,t1,units ='mins')
}
saveRDS(mod,here("./Export/GBTM_data4k_rep20maxit10"))
# mod=readRDS(here("./Export/GBTM_data4k_rep20maxit10"))
Modfit_data4k_rep20maxit10=GBTM_stat(mod)
ExportStuff=list(Time_rep20maxit10,Modfit_data4k_rep20maxit10)
saveRDS(ExportStuff,here("./Export/Stats_data4k_rep20maxit10"))
library(here)
# install.packages('gt')
library(gt)
# install.packages('webshot2')
library(webshot2)
# install.packages("matrixStats")
library(matrixStats)
library(here)
library(lcmm)
library(ggplot2)
library(ggpubr)
#import plot theme set-up
source(here("misc/plot_theme.R"))
#Import long format seroproection matrix (used by predictY function as input)
SP_long=readRDS(here("Data","SP_long_4k"))
#Import model object
mod=readRDS(here("./Export/test/GBTM_mods_rep20maxit10"))
###########################################################################################################
#plot predicted trajectories of optimal seroprotection probabilities by identified group membership for k=2~6
plotGBTM=function(mod){
datnew=data.frame(Week = seq(1, 103)/10)
par(mfrow=c(3,2),oma=c(1,1,1.5,1)+0.1,mar=c(4,4,3,1)+0.1)
pred_traj_k=list()
for (k in 1:length(mod)){
#create legend
Legend=c(sapply(1:k, function(i){
paste0("Group ",i)
}))
#create model prediction for group trajectory and save as object
plotpred=predictY(mod[[k]],datnew,var.time="Week", draws=2000)
pred_traj_k[[k]]=plotpred
#plot the predicted trajectory
plot(plotpred,lty=1, xlab="Week", ylab="Probability", shades=TRUE, xaxt="n", yaxt="n",legend=NULL,main=paste0("K=",k))
legend("topright",Legend,cex=0.5,lty=1, col=1:k,bty = "n")
axis(1, at =seq(0, 103, by=10)/10,label=seq(0, 103, by=10))
axis(2,at=seq(0,1,by=0.1), label=seq(0,1,by=0.1),las=1)
}
#add title to the plot
mtext("Predicted trajectories of PrEP sero-protection (Rand.Init=20, Maxiter=10)", side=3,line = 0,outer = TRUE)
#export the predicted trajectories as R object
saveRDS(pred_traj_k,here("Export","Pred_sp_probtraj_k"))
}
plotGBTM(mod)
#Import model object
mod=readRDS(here("./Export/GBTM_mods_rep20maxit10"))
mod=readRDS(here("./Export/GBTM_data4k_rep20maxit10"))
plotGBTM=function(mod){
datnew=data.frame(Week = seq(1, 103)/10)
par(mfrow=c(3,2),oma=c(1,1,1.5,1)+0.1,mar=c(4,4,3,1)+0.1)
pred_traj_k=list()
for (k in 1:length(mod)){
#create legend
Legend=c(sapply(1:k, function(i){
paste0("Group ",i)
}))
#create model prediction for group trajectory and save as object
plotpred=predictY(mod[[k]],datnew,var.time="Week", draws=2000)
pred_traj_k[[k]]=plotpred
#plot the predicted trajectory
plot(plotpred,lty=1, xlab="Week", ylab="Probability", shades=TRUE, xaxt="n", yaxt="n",legend=NULL,main=paste0("K=",k))
legend("topright",Legend,cex=0.5,lty=1, col=1:k,bty = "n")
axis(1, at =seq(0, 103, by=10)/10,label=seq(0, 103, by=10))
axis(2,at=seq(0,1,by=0.1), label=seq(0,1,by=0.1),las=1)
}
#add title to the plot
mtext("Predicted trajectories of PrEP sero-protection (Rand.Init=20, Maxiter=10)", side=3,line = 0,outer = TRUE)
#export the predicted trajectories as R object
saveRDS(pred_traj_k,here("Export","Pred_sp_probtraj_k"))
}
plotGBTM(mod)
obs_binary_traj=SeroProtect[,2:104]
Obs_sp_proptraj_k=list()
Obs_sp_proptraj_plot=list()
for (k in 1:length(mod)){
class=mod[[k]]$pprob$class
obs_prop_seroprotect=c()
for(i in sort(unique(class))){
Prop=obs_binary_traj[which(class==i),]%>%as.matrix()%>%colMeans()
dat=cbind(Week=1:length(Prop),Prop=Prop,Class=rep(i,length(Prop)))
obs_prop_seroprotect=rbind(obs_prop_seroprotect,dat)
}
obs_prop_seroprotect=data.frame(obs_prop_seroprotect)%>%mutate(Group=factor(Class))
Obs_sp_proptraj_k[[k]]=obs_prop_seroprotect
Obs_sp_proptraj_plot[[k]]=ggplot(obs_prop_seroprotect,aes(x=Week, y=Prop, colour=Group))+geom_line(linewidth=0.75)+ggtitle(paste0("K=",k))+scale_x_continuous(limits = c(1,103), expand = c(0, 0))+xlab("Week") + ylab("Probability")+theme_ben()+theme(plot.title = element_text(hjust = 0.5))
}
obs_plot=ggarrange(plotlist=Obs_sp_proptraj_plot,ncol=2,nrow=ceiling(length(Obs_sp_proptraj_plot)/2))
obs_plot=annotate_figure(obs_plot, top = text_grob("Observed proportion of optimal PrEP sero-protection by identified group membership", color = "black", face = "bold", size = 16))
## Export observed prop traj plot
ggexport(obs_plot, filename = here("Figures","Obs_prop_traj_k.png"),width=1200, height=1000)
## Export observed prop traj to rds
saveRDS(Obs_sp_proptraj_k, here("Export","Obs_sp_proptraj_k"))
length(mod)
pred_traj_k[[1]]%>%head()
pred_traj_k=readRDS(here("Export","Pred_sp_probtraj_k"))
pred_traj_k[[1]]%>%head()
pred_traj_k[[2]]%>%head()
pred_traj_k[[2]]%>%head()
pred_traj=pred_traj_k[[3]]
pred_traj["Week"]=1:103
pred_traj
data.frame(pred_traj_k[[3]])
pred_traj=data.frame(pred_traj_k[[3]]$pred)
pred_traj["Week"]=1:103
pred_traj
colnames(pred_traj)
grep("class1", colnames(pred_traj)
)
colnames(pred_traj)[grep("class1", colnames(pred_traj))]
colnames(pred_traj)[grep("50_class1", colnames(pred_traj))]
i=1
colnames(pred_traj)[grep(past0("50_class",i), colnames(pred_traj))]
colnames(pred_traj)[grep(paste0("50_class",i), colnames(pred_traj))]
i=2
colnames(pred_traj)[grep(paste0("50_class",i), colnames(pred_traj))]
varname_50=colnames(pred_traj)[grep(paste0("50_class",i), colnames(pred_traj))]
varname_2.5=colnames(pred_traj)[grep(paste0("2.5_class",i), colnames(pred_traj))]
varname_97.5=colnames(pred_traj)[grep(paste0("97.5_class",i), colnames(pred_traj))]
varname_50
varname_2.5
varname_97.5
traj_transform=function(pred_traj_k,K){
pred_traj=data.frame(pred_traj_k[[K]]$pred)
pred_prop_seroprotect=c()
for (i in 1:K){
varname_50=colnames(pred_traj)[grep(paste0("50_class",i), colnames(pred_traj))]
varname_2.5=colnames(pred_traj)[grep(paste0("2.5_class",i), colnames(pred_traj))]
varname_97.5=colnames(pred_traj)[grep(paste0("97.5_class",i), colnames(pred_traj))]
dat=cbind(Week=1:103,Prop_50=pred_traj[varname_50],Prop_2.5=pred_traj[varname_2.5],Prop_97.5=pred_traj[varname_97.5],Class=rep(i,K))
pred_prop_seroprotect=rbind(pred_prop_seroprotect,dat)
}
pred_prop_seroprotect=data.frame(pred_prop_seroprotect)%>%mutate(Group=factor(Class))
return(pred_prop_seroprotect)
}
traj_transform(pred_traj_k,4)
K=4
pred_traj=data.frame(pred_traj_k[[K]]$pred)
pred_prop_seroprotect=c()
i
varname_50=colnames(pred_traj)[grep(paste0("50_class",i), colnames(pred_traj))]
varname_50=colnames(pred_traj)[grep(paste0("50_class",i), colnames(pred_traj))]
varname_2.5=colnames(pred_traj)[grep(paste0("2.5_class",i), colnames(pred_traj))]
varname_97.5=colnames(pred_traj)[grep(paste0("97.5_class",i), colnames(pred_traj))]
dat=cbind(Week=1:103,Prop_50=pred_traj[varname_50],Prop_2.5=pred_traj[varname_2.5],Prop_97.5=pred_traj[varname_97.5],Class=rep(i,K))
pred_traj[varname_50]
as.array(pred_traj[varname_50])
pred_traj[varname_50][,1]
dat=cbind(Week=1:103,Prop_50=pred_traj[varname_50][,1],Prop_2.5=pred_traj[varname_2.5][,1],Prop_97.5=pred_traj[varname_97.5][,1],Class=rep(i,K))
dat=cbind(Week=1:103,Prop_50=pred_traj[varname_50][,1],Prop_2.5=pred_traj[varname_2.5][,1],Prop_97.5=pred_traj[varname_97.5][,1],Class=rep(i,103))
traj_transform(pred_traj_k,4)
traj_transform=function(pred_traj_k,K){
pred_traj=data.frame(pred_traj_k[[K]]$pred)
pred_prop_seroprotect=c()
for (i in 1:K){
varname_50=colnames(pred_traj)[grep(paste0("50_class",i), colnames(pred_traj))]
varname_2.5=colnames(pred_traj)[grep(paste0("2.5_class",i), colnames(pred_traj))]
varname_97.5=colnames(pred_traj)[grep(paste0("97.5_class",i), colnames(pred_traj))]
dat=cbind(Week=1:103,Prop_50=pred_traj[varname_50][,1],Prop_2.5=pred_traj[varname_2.5][,1],Prop_97.5=pred_traj[varname_97.5][,1],Class=rep(i,103))
pred_prop_seroprotect=rbind(pred_prop_seroprotect,dat)
}
pred_prop_seroprotect=data.frame(pred_prop_seroprotect)%>%mutate(Group=factor(Class))
return(pred_prop_seroprotect)
}
traj_transform(pred_traj_k,4)
traj_transform=function(pred_traj,K){
#convert wide to long format
pred_prop_seroprotect=c()
for (i in 1:K){
varname_50=colnames(pred_traj)[grep(paste0("50_class",i), colnames(pred_traj))]
varname_2.5=colnames(pred_traj)[grep(paste0("2.5_class",i), colnames(pred_traj))]
varname_97.5=colnames(pred_traj)[grep(paste0("97.5_class",i), colnames(pred_traj))]
dat=cbind(Week=1:103,Prop_50=pred_traj[varname_50][,1],Prop_2.5=pred_traj[varname_2.5][,1],Prop_97.5=pred_traj[varname_97.5][,1],Class=rep(i,103))
pred_prop_seroprotect=rbind(pred_prop_seroprotect,dat)
}
pred_prop_seroprotect=data.frame(pred_prop_seroprotect)%>%mutate(Group=factor(Class))
return(pred_prop_seroprotect)
}
plotpred=pred_traj_k[[4]]
plotpred_long=traj_transform(plotpred,4)
plotpred=pred_traj_k[[4]]$pred
plotpred_long=traj_transform(plotpred,4)
traj_transform=function(pred_traj,K){
#convert wide to long format
pred_prop_seroprotect=c()
for (i in 1:K){
varname_50=colnames(pred_traj)[grep(paste0("50_class",i), colnames(pred_traj))]
varname_2.5=colnames(pred_traj)[grep(paste0("2.5_class",i), colnames(pred_traj))]
varname_97.5=colnames(pred_traj)[grep(paste0("97.5_class",i), colnames(pred_traj))]
dat=cbind(Week=1:103,Prop_50=pred_traj[varname_50][,1],Prop_2.5=pred_traj[varname_2.5][,1],Prop_97.5=pred_traj[varname_97.5][,1],Class=rep(i,103))
pred_prop_seroprotect=rbind(pred_prop_seroprotect,dat)
}
pred_prop_seroprotect=data.frame(pred_prop_seroprotect)%>%mutate(Group=factor(Class))
return(pred_prop_seroprotect)
}
plotpred=pred_traj_k[[4]]$pred
plotpred_long=traj_transform(plotpred,4)
plotpred
pred_prop_seroprotect=c()
i
varname_50=colnames(pred_traj)[grep(paste0("50_class",i), colnames(pred_traj))]
varname_2.5=colnames(pred_traj)[grep(paste0("2.5_class",i), colnames(pred_traj))]
varname_97.5=colnames(pred_traj)[grep(paste0("97.5_class",i), colnames(pred_traj))]
dat=cbind(Week=1:103,Prop_50=pred_traj[varname_50][,1],Prop_2.5=pred_traj[varname_2.5][,1],Prop_97.5=pred_traj[varname_97.5][,1],Class=rep(i,103))
pred_prop_seroprotect=rbind(pred_prop_seroprotect,dat)
pred_prop_seroprotect
K=4
varname_50=colnames(pred_traj)[grep(paste0("50_class",i), colnames(pred_traj))]
varname_2.5=colnames(pred_traj)[grep(paste0("2.5_class",i), colnames(pred_traj))]
varname_97.5=colnames(pred_traj)[grep(paste0("97.5_class",i), colnames(pred_traj))]
dat=cbind(Week=1:103,Prop_50=pred_traj[varname_50][,1],Prop_2.5=pred_traj[varname_2.5][,1],Prop_97.5=pred_traj[varname_97.5][,1],Class=rep(i,103))
pred_prop_seroprotect=rbind(pred_prop_seroprotect,dat)
pred_prop_seroprotect=data.frame(pred_prop_seroprotect)%>%mutate(Group=factor(Class))
traj_transform=function(pred_traj,K){
#convert wide to long format
pred_prop_seroprotect=c()
for (i in 1:K){
print(i)
varname_50=colnames(pred_traj)[grep(paste0("50_class",i), colnames(pred_traj))]
varname_2.5=colnames(pred_traj)[grep(paste0("2.5_class",i), colnames(pred_traj))]
varname_97.5=colnames(pred_traj)[grep(paste0("97.5_class",i), colnames(pred_traj))]
dat=cbind(Week=1:103,Prop_50=pred_traj[varname_50][,1],Prop_2.5=pred_traj[varname_2.5][,1],Prop_97.5=pred_traj[varname_97.5][,1],Class=rep(i,103))
pred_prop_seroprotect=rbind(pred_prop_seroprotect,dat)
}
pred_prop_seroprotect=data.frame(pred_prop_seroprotect)%>%mutate(Group=factor(Class))
return(pred_prop_seroprotect)
}
traj_transform(plotpred,4)
i
i=1
pred_traj
varname_50=colnames(pred_traj)[grep(paste0("50_class",i), colnames(pred_traj))]
varname_2.5=colnames(pred_traj)[grep(paste0("2.5_class",i), colnames(pred_traj))]
varname_97.5=colnames(pred_traj)[grep(paste0("97.5_class",i), colnames(pred_traj))]
varname_50
varname_97.5
dat=cbind(Week=1:103,Prop_50=pred_traj[varname_50][,1],Prop_2.5=pred_traj[varname_2.5][,1],Prop_97.5=pred_traj[varname_97.5][,1],Class=rep(i,103))
traj_transform=function(pred_traj,K){
#convert wide to long format
pred_prop_seroprotect=c()
for (i in 1:K){
print(i)
varname_50=colnames(pred_traj)[grep(paste0("50_class",i), colnames(pred_traj))]
varname_2.5=colnames(pred_traj)[grep(paste0("2.5_class",i), colnames(pred_traj))]
varname_97.5=colnames(pred_traj)[grep(paste0("97.5_class",i), colnames(pred_traj))]
dat=cbind(Week=1:103,Prop_50=pred_traj[varname_50][,1],Prop_2.5=pred_traj[varname_2.5][,1],Prop_97.5=pred_traj[varname_97.5][,1],Class=rep(i,103))
pred_prop_seroprotect=rbind(pred_prop_seroprotect,dat)
}
pred_prop_seroprotect=data.frame(pred_prop_seroprotect)%>%mutate(Group=factor(Class))
return(pred_prop_seroprotect)
}
plotpred
traj_transform(plotpred,4)
traj_transform=function(pred_traj,K){
#convert wide to long format
pred_prop_seroprotect=c()
for (i in 1:K){
print(i)
varname_50=colnames(pred_traj)[grep(paste0("50_class",i), colnames(pred_traj))]
varname_2.5=colnames(pred_traj)[grep(paste0("2.5_class",i), colnames(pred_traj))]
varname_97.5=colnames(pred_traj)[grep(paste0("97.5_class",i), colnames(pred_traj))]
browser()
dat=cbind(Week=1:103,Prop_50=pred_traj[varname_50][,1],Prop_2.5=pred_traj[varname_2.5][,1],Prop_97.5=pred_traj[varname_97.5][,1],Class=rep(i,103))
pred_prop_seroprotect=rbind(pred_prop_seroprotect,dat)
}
pred_prop_seroprotect=data.frame(pred_prop_seroprotect)%>%mutate(Group=factor(Class))
return(pred_prop_seroprotect)
}
traj_transform(plotpred,4)
varname_97.5
varname_2.5
varname_50=
colnames(pred_traj)[grep(paste0("50_class",i), colnames(pred_traj))]
varname_50
dat=cbind(Week=1:103,Prop_50=pred_traj[varname_50][,1],Prop_2.5=pred_traj[varname_2.5][,1],Prop_97.5=pred_traj[varname_97.5][,1],Class=rep(i,103))
pred_prop_seroprotect=rbind(pred_prop_seroprotect,dat)
pred_traj[varname_50][,1]
Prop_50=pred_traj[varname_50][,1]
Prop_2.5=pred_traj[varname_2.5][,1]
Prop_97.5=pred_traj[varname_97.5][,1]
Class=rep(i,103)
length(Prop_2.5)
length(Prop_50)
length(Prop_97.5)
length(Class)
dat=cbind(Week=1:103,Prop_50=pred_traj[varname_50][,1],Prop_2.5=pred_traj[varname_2.5][,1],Prop_97.5=pred_traj[varname_97.5][,1],Class=rep(i,103))
dat
rbind(pred_prop_seroprotect,dat)
pred_prop_seroprotect=data.frame()
pred_prop_seroprotect=rbind(pred_prop_seroprotect,dat)
pred_prop_seroprotect
traj_transform=function(pred_traj,K){
#convert wide to long format
pred_prop_seroprotect=data.frame()
for (i in 1:K){
print(i)
varname_50=colnames(pred_traj)[grep(paste0("50_class",i), colnames(pred_traj))]
varname_2.5=colnames(pred_traj)[grep(paste0("2.5_class",i), colnames(pred_traj))]
varname_97.5=colnames(pred_traj)[grep(paste0("97.5_class",i), colnames(pred_traj))]
browser()
dat=cbind(Week=1:103,Prop_50=pred_traj[varname_50][,1],Prop_2.5=pred_traj[varname_2.5][,1],Prop_97.5=pred_traj[varname_97.5][,1],Class=rep(i,103))
pred_prop_seroprotect=rbind(pred_prop_seroprotect,dat)
}
pred_prop_seroprotect=data.frame(pred_prop_seroprotect)%>%mutate(Group=factor(Class))
return(pred_prop_seroprotect)
}
traj_transform(plotpred,4)
dat=cbind(Week=1:103,Prop_50=pred_traj[varname_50][,1],Prop_2.5=pred_traj[varname_2.5][,1],Prop_97.5=pred_traj[varname_97.5][,1],Class=rep(i,103))
pred_prop_seroprotect=rbind(pred_prop_seroprotect,dat)
typeof(pred_prop_seroprotect)
pred_prop_seroprotect
plotpred
typeof(plotpred)
typeof(pred_traj)
pred_prop_seroprotect=data.frame()
typeof(pred_prop_seroprotect)
pred_prop_seroprotect=as.data.frame()
pred_prop_seroprotect[[1]]
length(pred_prop_seroprotect)
typeof(dat)
pred_prop_seroprotect=c()
typeof(pred_prop_seroprotect)
rbind(pred_prop_seroprotect,dat)
pred_prop_seroprotect=rbind(pred_prop_seroprotect,dat)
typeof(pred_prop_seroprotect)
traj_transform=function(pred_traj,K){
#convert wide to long format
pred_prop_seroprotect=c()
for (i in 1:K){
print(i)
varname_50=colnames(pred_traj)[grep(paste0("50_class",i), colnames(pred_traj))]
varname_2.5=colnames(pred_traj)[grep(paste0("2.5_class",i), colnames(pred_traj))]
varname_97.5=colnames(pred_traj)[grep(paste0("97.5_class",i), colnames(pred_traj))]
dat=cbind(Week=1:103,Prop_50=pred_traj[varname_50][,1],Prop_2.5=pred_traj[varname_2.5][,1],Prop_97.5=pred_traj[varname_97.5][,1],Class=rep(i,103))
pred_prop_seroprotect=rbind(pred_prop_seroprotect,dat)
}
pred_prop_seroprotect2=data.frame(pred_prop_seroprotect)%>%mutate(Group=factor(Class))
return(pred_prop_seroprotect2)
}
traj_transform(plotpred,4)
dat
i
pred_prop_seroprotect2
pred_prop_seroprotect
traj_transform=function(pred_traj,K){
#convert wide to long format
dat2=c()
for (i in 1:K){
print(i)
varname_50=colnames(pred_traj)[grep(paste0("50_class",i), colnames(pred_traj))]
varname_2.5=colnames(pred_traj)[grep(paste0("2.5_class",i), colnames(pred_traj))]
varname_97.5=colnames(pred_traj)[grep(paste0("97.5_class",i), colnames(pred_traj))]
dat=cbind(Week=1:103,Prop_50=pred_traj[varname_50][,1],Prop_2.5=pred_traj[varname_2.5][,1],Prop_97.5=pred_traj[varname_97.5][,1],Class=rep(i,103))
dat2=rbind(dat2,dat)
}
dat3=data.frame(dat2)%>%mutate(Group=factor(Class))
return(dat3)
}
traj_transform(plotpred,4)
dat2
dat
traj_transform=function(pred_traj,K){
#convert wide to long format
for (i in 1:K){
print(i)
varname_50=colnames(pred_traj)[grep(paste0("50_class",i), colnames(pred_traj))]
varname_2.5=colnames(pred_traj)[grep(paste0("2.5_class",i), colnames(pred_traj))]
varname_97.5=colnames(pred_traj)[grep(paste0("97.5_class",i), colnames(pred_traj))]
dat=cbind(Week=1:103,Prop_50=pred_traj[varname_50][,1],Prop_2.5=pred_traj[varname_2.5][,1],Prop_97.5=pred_traj[varname_97.5][,1],Class=rep(i,103))
if(i==1){
dat2=dat
} else {
dat2=rbind(dat2,dat)
}
}
dat3=data.frame(dat2)%>%mutate(Group=factor(Class))
return(dat3)
}
traj_transform(plotpred,4)
pred_traj
dat
